import{_ as c}from"./preload-helper-fe81da0e.js";import{S as u,i as l,s as p,o as m,a3 as f}from"./index-ef46e954.js";function y(i,a,r){let{opts:t={}}=a,{hypnsNode:o=null}=a,n;return m(async()=>{n=await c(()=>import("./hypns-bundle-8002fa08.js").then(s=>s.h),["_app/immutable/chunks/hypns-bundle-8002fa08.js","_app/immutable/chunks/index-589677d1.js","_app/immutable/chunks/preload-helper-fe81da0e.js","_app/immutable/chunks/index-ef46e954.js"]),n.default&&(n=n.default),t||r(0,t={persist:!0,swarmOpts:{announceLocalAddress:!0,wsProxy:["wss://hyperswarm.mauve.moe"]}});const e=new n(t);await e.init(),r(1,o=e);const d="onpagehide"in self?"pagehide":"unload";addEventListener(d,async s=>{await o.close()},{capture:!0});try{const h=(await c(()=>import("./adapter_core-919699b9.js"),[])).default}catch{console.warn("WebRTC adapter not found.")}}),f(async()=>{try{await o.close()}catch{console.log("Closed undefined Hypns component. ")}}),i.$$set=e=>{"opts"in e&&r(0,t=e.opts),"hypnsNode"in e&&r(1,o=e.hypnsNode)},[t,o]}class _ extends u{constructor(a){super(),l(this,a,y,null,p,{opts:0,hypnsNode:1})}}const P=_;export{P as default};
